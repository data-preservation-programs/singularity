// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ModelDealTemplate model deal template
//
// swagger:model model.DealTemplate
type ModelDealTemplate struct {

	// created at
	CreatedAt string `json:"createdAt,omitempty"`

	// Deal Parameters (encapsulated in DealConfig struct)
	DealConfig struct {
		ModelDealConfig
	} `json:"dealConfig,omitempty"`

	// description
	Description string `json:"description,omitempty"`

	// id
	ID int64 `json:"id,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// updated at
	UpdatedAt string `json:"updatedAt,omitempty"`
}

// Validate validates this model deal template
func (m *ModelDealTemplate) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDealConfig(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ModelDealTemplate) validateDealConfig(formats strfmt.Registry) error {
	if swag.IsZero(m.DealConfig) { // not required
		return nil
	}

	return nil
}

// ContextValidate validate this model deal template based on the context it is used
func (m *ModelDealTemplate) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateDealConfig(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ModelDealTemplate) contextValidateDealConfig(ctx context.Context, formats strfmt.Registry) error {

	return nil
}

// MarshalBinary interface implementation
func (m *ModelDealTemplate) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ModelDealTemplate) UnmarshalBinary(b []byte) error {
	var res ModelDealTemplate
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
