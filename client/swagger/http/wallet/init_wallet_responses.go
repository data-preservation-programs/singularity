// Code generated by go-swagger; DO NOT EDIT.

package wallet

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/data-preservation-programs/singularity/client/swagger/models"
)

// InitWalletReader is a Reader for the InitWallet structure.
type InitWalletReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *InitWalletReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewInitWalletOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewInitWalletBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewInitWalletInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /wallet/{address}/init] InitWallet", response, response.Code())
	}
}

// NewInitWalletOK creates a InitWalletOK with default headers values
func NewInitWalletOK() *InitWalletOK {
	return &InitWalletOK{}
}

/*
InitWalletOK describes a response with status code 200, with default header values.

OK
*/
type InitWalletOK struct {
	Payload *models.ModelWallet
}

// IsSuccess returns true when this init wallet o k response has a 2xx status code
func (o *InitWalletOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this init wallet o k response has a 3xx status code
func (o *InitWalletOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this init wallet o k response has a 4xx status code
func (o *InitWalletOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this init wallet o k response has a 5xx status code
func (o *InitWalletOK) IsServerError() bool {
	return false
}

// IsCode returns true when this init wallet o k response a status code equal to that given
func (o *InitWalletOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the init wallet o k response
func (o *InitWalletOK) Code() int {
	return 200
}

func (o *InitWalletOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /wallet/{address}/init][%d] initWalletOK %s", 200, payload)
}

func (o *InitWalletOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /wallet/{address}/init][%d] initWalletOK %s", 200, payload)
}

func (o *InitWalletOK) GetPayload() *models.ModelWallet {
	return o.Payload
}

func (o *InitWalletOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelWallet)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInitWalletBadRequest creates a InitWalletBadRequest with default headers values
func NewInitWalletBadRequest() *InitWalletBadRequest {
	return &InitWalletBadRequest{}
}

/*
InitWalletBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type InitWalletBadRequest struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this init wallet bad request response has a 2xx status code
func (o *InitWalletBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this init wallet bad request response has a 3xx status code
func (o *InitWalletBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this init wallet bad request response has a 4xx status code
func (o *InitWalletBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this init wallet bad request response has a 5xx status code
func (o *InitWalletBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this init wallet bad request response a status code equal to that given
func (o *InitWalletBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the init wallet bad request response
func (o *InitWalletBadRequest) Code() int {
	return 400
}

func (o *InitWalletBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /wallet/{address}/init][%d] initWalletBadRequest %s", 400, payload)
}

func (o *InitWalletBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /wallet/{address}/init][%d] initWalletBadRequest %s", 400, payload)
}

func (o *InitWalletBadRequest) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *InitWalletBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInitWalletInternalServerError creates a InitWalletInternalServerError with default headers values
func NewInitWalletInternalServerError() *InitWalletInternalServerError {
	return &InitWalletInternalServerError{}
}

/*
InitWalletInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type InitWalletInternalServerError struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this init wallet internal server error response has a 2xx status code
func (o *InitWalletInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this init wallet internal server error response has a 3xx status code
func (o *InitWalletInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this init wallet internal server error response has a 4xx status code
func (o *InitWalletInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this init wallet internal server error response has a 5xx status code
func (o *InitWalletInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this init wallet internal server error response a status code equal to that given
func (o *InitWalletInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the init wallet internal server error response
func (o *InitWalletInternalServerError) Code() int {
	return 500
}

func (o *InitWalletInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /wallet/{address}/init][%d] initWalletInternalServerError %s", 500, payload)
}

func (o *InitWalletInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /wallet/{address}/init][%d] initWalletInternalServerError %s", 500, payload)
}

func (o *InitWalletInternalServerError) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *InitWalletInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
