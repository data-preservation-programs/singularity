// Code generated by go-swagger; DO NOT EDIT.

package wallet

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/data-preservation-programs/singularity/client/swagger/models"
)

// GetWalletBalanceReader is a Reader for the GetWalletBalance structure.
type GetWalletBalanceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetWalletBalanceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetWalletBalanceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetWalletBalanceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetWalletBalanceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /wallet/{address}/balance] GetWalletBalance", response, response.Code())
	}
}

// NewGetWalletBalanceOK creates a GetWalletBalanceOK with default headers values
func NewGetWalletBalanceOK() *GetWalletBalanceOK {
	return &GetWalletBalanceOK{}
}

/*
GetWalletBalanceOK describes a response with status code 200, with default header values.

OK
*/
type GetWalletBalanceOK struct {
	Payload *models.WalletBalanceResponse
}

// IsSuccess returns true when this get wallet balance o k response has a 2xx status code
func (o *GetWalletBalanceOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get wallet balance o k response has a 3xx status code
func (o *GetWalletBalanceOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get wallet balance o k response has a 4xx status code
func (o *GetWalletBalanceOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get wallet balance o k response has a 5xx status code
func (o *GetWalletBalanceOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get wallet balance o k response a status code equal to that given
func (o *GetWalletBalanceOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get wallet balance o k response
func (o *GetWalletBalanceOK) Code() int {
	return 200
}

func (o *GetWalletBalanceOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /wallet/{address}/balance][%d] getWalletBalanceOK %s", 200, payload)
}

func (o *GetWalletBalanceOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /wallet/{address}/balance][%d] getWalletBalanceOK %s", 200, payload)
}

func (o *GetWalletBalanceOK) GetPayload() *models.WalletBalanceResponse {
	return o.Payload
}

func (o *GetWalletBalanceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.WalletBalanceResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWalletBalanceBadRequest creates a GetWalletBalanceBadRequest with default headers values
func NewGetWalletBalanceBadRequest() *GetWalletBalanceBadRequest {
	return &GetWalletBalanceBadRequest{}
}

/*
GetWalletBalanceBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetWalletBalanceBadRequest struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this get wallet balance bad request response has a 2xx status code
func (o *GetWalletBalanceBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get wallet balance bad request response has a 3xx status code
func (o *GetWalletBalanceBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get wallet balance bad request response has a 4xx status code
func (o *GetWalletBalanceBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get wallet balance bad request response has a 5xx status code
func (o *GetWalletBalanceBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get wallet balance bad request response a status code equal to that given
func (o *GetWalletBalanceBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get wallet balance bad request response
func (o *GetWalletBalanceBadRequest) Code() int {
	return 400
}

func (o *GetWalletBalanceBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /wallet/{address}/balance][%d] getWalletBalanceBadRequest %s", 400, payload)
}

func (o *GetWalletBalanceBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /wallet/{address}/balance][%d] getWalletBalanceBadRequest %s", 400, payload)
}

func (o *GetWalletBalanceBadRequest) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *GetWalletBalanceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWalletBalanceInternalServerError creates a GetWalletBalanceInternalServerError with default headers values
func NewGetWalletBalanceInternalServerError() *GetWalletBalanceInternalServerError {
	return &GetWalletBalanceInternalServerError{}
}

/*
GetWalletBalanceInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetWalletBalanceInternalServerError struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this get wallet balance internal server error response has a 2xx status code
func (o *GetWalletBalanceInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get wallet balance internal server error response has a 3xx status code
func (o *GetWalletBalanceInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get wallet balance internal server error response has a 4xx status code
func (o *GetWalletBalanceInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get wallet balance internal server error response has a 5xx status code
func (o *GetWalletBalanceInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get wallet balance internal server error response a status code equal to that given
func (o *GetWalletBalanceInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get wallet balance internal server error response
func (o *GetWalletBalanceInternalServerError) Code() int {
	return 500
}

func (o *GetWalletBalanceInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /wallet/{address}/balance][%d] getWalletBalanceInternalServerError %s", 500, payload)
}

func (o *GetWalletBalanceInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /wallet/{address}/balance][%d] getWalletBalanceInternalServerError %s", 500, payload)
}

func (o *GetWalletBalanceInternalServerError) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *GetWalletBalanceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
