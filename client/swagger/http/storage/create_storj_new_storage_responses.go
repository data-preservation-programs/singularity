// Code generated by go-swagger; DO NOT EDIT.

package storage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/data-preservation-programs/singularity/client/swagger/models"
)

// CreateStorjNewStorageReader is a Reader for the CreateStorjNewStorage structure.
type CreateStorjNewStorageReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateStorjNewStorageReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateStorjNewStorageOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateStorjNewStorageBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateStorjNewStorageInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /storage/storj/new] CreateStorjNewStorage", response, response.Code())
	}
}

// NewCreateStorjNewStorageOK creates a CreateStorjNewStorageOK with default headers values
func NewCreateStorjNewStorageOK() *CreateStorjNewStorageOK {
	return &CreateStorjNewStorageOK{}
}

/*
CreateStorjNewStorageOK describes a response with status code 200, with default header values.

OK
*/
type CreateStorjNewStorageOK struct {
	Payload *models.ModelStorage
}

// IsSuccess returns true when this create storj new storage o k response has a 2xx status code
func (o *CreateStorjNewStorageOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create storj new storage o k response has a 3xx status code
func (o *CreateStorjNewStorageOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create storj new storage o k response has a 4xx status code
func (o *CreateStorjNewStorageOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create storj new storage o k response has a 5xx status code
func (o *CreateStorjNewStorageOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create storj new storage o k response a status code equal to that given
func (o *CreateStorjNewStorageOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create storj new storage o k response
func (o *CreateStorjNewStorageOK) Code() int {
	return 200
}

func (o *CreateStorjNewStorageOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /storage/storj/new][%d] createStorjNewStorageOK %s", 200, payload)
}

func (o *CreateStorjNewStorageOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /storage/storj/new][%d] createStorjNewStorageOK %s", 200, payload)
}

func (o *CreateStorjNewStorageOK) GetPayload() *models.ModelStorage {
	return o.Payload
}

func (o *CreateStorjNewStorageOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelStorage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateStorjNewStorageBadRequest creates a CreateStorjNewStorageBadRequest with default headers values
func NewCreateStorjNewStorageBadRequest() *CreateStorjNewStorageBadRequest {
	return &CreateStorjNewStorageBadRequest{}
}

/*
CreateStorjNewStorageBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CreateStorjNewStorageBadRequest struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this create storj new storage bad request response has a 2xx status code
func (o *CreateStorjNewStorageBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create storj new storage bad request response has a 3xx status code
func (o *CreateStorjNewStorageBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create storj new storage bad request response has a 4xx status code
func (o *CreateStorjNewStorageBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create storj new storage bad request response has a 5xx status code
func (o *CreateStorjNewStorageBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create storj new storage bad request response a status code equal to that given
func (o *CreateStorjNewStorageBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create storj new storage bad request response
func (o *CreateStorjNewStorageBadRequest) Code() int {
	return 400
}

func (o *CreateStorjNewStorageBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /storage/storj/new][%d] createStorjNewStorageBadRequest %s", 400, payload)
}

func (o *CreateStorjNewStorageBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /storage/storj/new][%d] createStorjNewStorageBadRequest %s", 400, payload)
}

func (o *CreateStorjNewStorageBadRequest) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *CreateStorjNewStorageBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateStorjNewStorageInternalServerError creates a CreateStorjNewStorageInternalServerError with default headers values
func NewCreateStorjNewStorageInternalServerError() *CreateStorjNewStorageInternalServerError {
	return &CreateStorjNewStorageInternalServerError{}
}

/*
CreateStorjNewStorageInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CreateStorjNewStorageInternalServerError struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this create storj new storage internal server error response has a 2xx status code
func (o *CreateStorjNewStorageInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create storj new storage internal server error response has a 3xx status code
func (o *CreateStorjNewStorageInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create storj new storage internal server error response has a 4xx status code
func (o *CreateStorjNewStorageInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create storj new storage internal server error response has a 5xx status code
func (o *CreateStorjNewStorageInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create storj new storage internal server error response a status code equal to that given
func (o *CreateStorjNewStorageInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create storj new storage internal server error response
func (o *CreateStorjNewStorageInternalServerError) Code() int {
	return 500
}

func (o *CreateStorjNewStorageInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /storage/storj/new][%d] createStorjNewStorageInternalServerError %s", 500, payload)
}

func (o *CreateStorjNewStorageInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /storage/storj/new][%d] createStorjNewStorageInternalServerError %s", 500, payload)
}

func (o *CreateStorjNewStorageInternalServerError) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *CreateStorjNewStorageInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
