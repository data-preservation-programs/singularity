// Code generated by go-swagger; DO NOT EDIT.

package storage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/data-preservation-programs/singularity/client/swagger/models"
)

// CreateS3IBMCOSStorageReader is a Reader for the CreateS3IBMCOSStorage structure.
type CreateS3IBMCOSStorageReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateS3IBMCOSStorageReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateS3IBMCOSStorageOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateS3IBMCOSStorageBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateS3IBMCOSStorageInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /storage/s3/ibmcos] CreateS3IBMCOSStorage", response, response.Code())
	}
}

// NewCreateS3IBMCOSStorageOK creates a CreateS3IBMCOSStorageOK with default headers values
func NewCreateS3IBMCOSStorageOK() *CreateS3IBMCOSStorageOK {
	return &CreateS3IBMCOSStorageOK{}
}

/*
CreateS3IBMCOSStorageOK describes a response with status code 200, with default header values.

OK
*/
type CreateS3IBMCOSStorageOK struct {
	Payload *models.ModelStorage
}

// IsSuccess returns true when this create s3 i b m c o s storage o k response has a 2xx status code
func (o *CreateS3IBMCOSStorageOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create s3 i b m c o s storage o k response has a 3xx status code
func (o *CreateS3IBMCOSStorageOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create s3 i b m c o s storage o k response has a 4xx status code
func (o *CreateS3IBMCOSStorageOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create s3 i b m c o s storage o k response has a 5xx status code
func (o *CreateS3IBMCOSStorageOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create s3 i b m c o s storage o k response a status code equal to that given
func (o *CreateS3IBMCOSStorageOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create s3 i b m c o s storage o k response
func (o *CreateS3IBMCOSStorageOK) Code() int {
	return 200
}

func (o *CreateS3IBMCOSStorageOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /storage/s3/ibmcos][%d] createS3IBMCOSStorageOK %s", 200, payload)
}

func (o *CreateS3IBMCOSStorageOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /storage/s3/ibmcos][%d] createS3IBMCOSStorageOK %s", 200, payload)
}

func (o *CreateS3IBMCOSStorageOK) GetPayload() *models.ModelStorage {
	return o.Payload
}

func (o *CreateS3IBMCOSStorageOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelStorage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateS3IBMCOSStorageBadRequest creates a CreateS3IBMCOSStorageBadRequest with default headers values
func NewCreateS3IBMCOSStorageBadRequest() *CreateS3IBMCOSStorageBadRequest {
	return &CreateS3IBMCOSStorageBadRequest{}
}

/*
CreateS3IBMCOSStorageBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CreateS3IBMCOSStorageBadRequest struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this create s3 i b m c o s storage bad request response has a 2xx status code
func (o *CreateS3IBMCOSStorageBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create s3 i b m c o s storage bad request response has a 3xx status code
func (o *CreateS3IBMCOSStorageBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create s3 i b m c o s storage bad request response has a 4xx status code
func (o *CreateS3IBMCOSStorageBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create s3 i b m c o s storage bad request response has a 5xx status code
func (o *CreateS3IBMCOSStorageBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create s3 i b m c o s storage bad request response a status code equal to that given
func (o *CreateS3IBMCOSStorageBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create s3 i b m c o s storage bad request response
func (o *CreateS3IBMCOSStorageBadRequest) Code() int {
	return 400
}

func (o *CreateS3IBMCOSStorageBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /storage/s3/ibmcos][%d] createS3IBMCOSStorageBadRequest %s", 400, payload)
}

func (o *CreateS3IBMCOSStorageBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /storage/s3/ibmcos][%d] createS3IBMCOSStorageBadRequest %s", 400, payload)
}

func (o *CreateS3IBMCOSStorageBadRequest) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *CreateS3IBMCOSStorageBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateS3IBMCOSStorageInternalServerError creates a CreateS3IBMCOSStorageInternalServerError with default headers values
func NewCreateS3IBMCOSStorageInternalServerError() *CreateS3IBMCOSStorageInternalServerError {
	return &CreateS3IBMCOSStorageInternalServerError{}
}

/*
CreateS3IBMCOSStorageInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CreateS3IBMCOSStorageInternalServerError struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this create s3 i b m c o s storage internal server error response has a 2xx status code
func (o *CreateS3IBMCOSStorageInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create s3 i b m c o s storage internal server error response has a 3xx status code
func (o *CreateS3IBMCOSStorageInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create s3 i b m c o s storage internal server error response has a 4xx status code
func (o *CreateS3IBMCOSStorageInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create s3 i b m c o s storage internal server error response has a 5xx status code
func (o *CreateS3IBMCOSStorageInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create s3 i b m c o s storage internal server error response a status code equal to that given
func (o *CreateS3IBMCOSStorageInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create s3 i b m c o s storage internal server error response
func (o *CreateS3IBMCOSStorageInternalServerError) Code() int {
	return 500
}

func (o *CreateS3IBMCOSStorageInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /storage/s3/ibmcos][%d] createS3IBMCOSStorageInternalServerError %s", 500, payload)
}

func (o *CreateS3IBMCOSStorageInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /storage/s3/ibmcos][%d] createS3IBMCOSStorageInternalServerError %s", 500, payload)
}

func (o *CreateS3IBMCOSStorageInternalServerError) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *CreateS3IBMCOSStorageInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
