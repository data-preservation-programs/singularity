// Code generated by go-swagger; DO NOT EDIT.

package storage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/data-preservation-programs/singularity/client/swagger/models"
)

// CreateYandexStorageReader is a Reader for the CreateYandexStorage structure.
type CreateYandexStorageReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateYandexStorageReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateYandexStorageOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateYandexStorageBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateYandexStorageInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /storage/yandex] CreateYandexStorage", response, response.Code())
	}
}

// NewCreateYandexStorageOK creates a CreateYandexStorageOK with default headers values
func NewCreateYandexStorageOK() *CreateYandexStorageOK {
	return &CreateYandexStorageOK{}
}

/*
CreateYandexStorageOK describes a response with status code 200, with default header values.

OK
*/
type CreateYandexStorageOK struct {
	Payload *models.ModelStorage
}

// IsSuccess returns true when this create yandex storage o k response has a 2xx status code
func (o *CreateYandexStorageOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create yandex storage o k response has a 3xx status code
func (o *CreateYandexStorageOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create yandex storage o k response has a 4xx status code
func (o *CreateYandexStorageOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create yandex storage o k response has a 5xx status code
func (o *CreateYandexStorageOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create yandex storage o k response a status code equal to that given
func (o *CreateYandexStorageOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create yandex storage o k response
func (o *CreateYandexStorageOK) Code() int {
	return 200
}

func (o *CreateYandexStorageOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /storage/yandex][%d] createYandexStorageOK %s", 200, payload)
}

func (o *CreateYandexStorageOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /storage/yandex][%d] createYandexStorageOK %s", 200, payload)
}

func (o *CreateYandexStorageOK) GetPayload() *models.ModelStorage {
	return o.Payload
}

func (o *CreateYandexStorageOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelStorage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateYandexStorageBadRequest creates a CreateYandexStorageBadRequest with default headers values
func NewCreateYandexStorageBadRequest() *CreateYandexStorageBadRequest {
	return &CreateYandexStorageBadRequest{}
}

/*
CreateYandexStorageBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CreateYandexStorageBadRequest struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this create yandex storage bad request response has a 2xx status code
func (o *CreateYandexStorageBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create yandex storage bad request response has a 3xx status code
func (o *CreateYandexStorageBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create yandex storage bad request response has a 4xx status code
func (o *CreateYandexStorageBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create yandex storage bad request response has a 5xx status code
func (o *CreateYandexStorageBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create yandex storage bad request response a status code equal to that given
func (o *CreateYandexStorageBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create yandex storage bad request response
func (o *CreateYandexStorageBadRequest) Code() int {
	return 400
}

func (o *CreateYandexStorageBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /storage/yandex][%d] createYandexStorageBadRequest %s", 400, payload)
}

func (o *CreateYandexStorageBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /storage/yandex][%d] createYandexStorageBadRequest %s", 400, payload)
}

func (o *CreateYandexStorageBadRequest) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *CreateYandexStorageBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateYandexStorageInternalServerError creates a CreateYandexStorageInternalServerError with default headers values
func NewCreateYandexStorageInternalServerError() *CreateYandexStorageInternalServerError {
	return &CreateYandexStorageInternalServerError{}
}

/*
CreateYandexStorageInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CreateYandexStorageInternalServerError struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this create yandex storage internal server error response has a 2xx status code
func (o *CreateYandexStorageInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create yandex storage internal server error response has a 3xx status code
func (o *CreateYandexStorageInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create yandex storage internal server error response has a 4xx status code
func (o *CreateYandexStorageInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create yandex storage internal server error response has a 5xx status code
func (o *CreateYandexStorageInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create yandex storage internal server error response a status code equal to that given
func (o *CreateYandexStorageInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create yandex storage internal server error response
func (o *CreateYandexStorageInternalServerError) Code() int {
	return 500
}

func (o *CreateYandexStorageInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /storage/yandex][%d] createYandexStorageInternalServerError %s", 500, payload)
}

func (o *CreateYandexStorageInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /storage/yandex][%d] createYandexStorageInternalServerError %s", 500, payload)
}

func (o *CreateYandexStorageInternalServerError) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *CreateYandexStorageInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
