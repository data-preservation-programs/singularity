// Code generated by go-swagger; DO NOT EDIT.

package storage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/data-preservation-programs/singularity/client/swagger/models"
)

// CreateDriveStorageReader is a Reader for the CreateDriveStorage structure.
type CreateDriveStorageReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateDriveStorageReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateDriveStorageOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateDriveStorageBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateDriveStorageInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /storage/drive] CreateDriveStorage", response, response.Code())
	}
}

// NewCreateDriveStorageOK creates a CreateDriveStorageOK with default headers values
func NewCreateDriveStorageOK() *CreateDriveStorageOK {
	return &CreateDriveStorageOK{}
}

/*
CreateDriveStorageOK describes a response with status code 200, with default header values.

OK
*/
type CreateDriveStorageOK struct {
	Payload *models.ModelStorage
}

// IsSuccess returns true when this create drive storage o k response has a 2xx status code
func (o *CreateDriveStorageOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create drive storage o k response has a 3xx status code
func (o *CreateDriveStorageOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create drive storage o k response has a 4xx status code
func (o *CreateDriveStorageOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create drive storage o k response has a 5xx status code
func (o *CreateDriveStorageOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create drive storage o k response a status code equal to that given
func (o *CreateDriveStorageOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create drive storage o k response
func (o *CreateDriveStorageOK) Code() int {
	return 200
}

func (o *CreateDriveStorageOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /storage/drive][%d] createDriveStorageOK %s", 200, payload)
}

func (o *CreateDriveStorageOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /storage/drive][%d] createDriveStorageOK %s", 200, payload)
}

func (o *CreateDriveStorageOK) GetPayload() *models.ModelStorage {
	return o.Payload
}

func (o *CreateDriveStorageOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelStorage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateDriveStorageBadRequest creates a CreateDriveStorageBadRequest with default headers values
func NewCreateDriveStorageBadRequest() *CreateDriveStorageBadRequest {
	return &CreateDriveStorageBadRequest{}
}

/*
CreateDriveStorageBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CreateDriveStorageBadRequest struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this create drive storage bad request response has a 2xx status code
func (o *CreateDriveStorageBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create drive storage bad request response has a 3xx status code
func (o *CreateDriveStorageBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create drive storage bad request response has a 4xx status code
func (o *CreateDriveStorageBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create drive storage bad request response has a 5xx status code
func (o *CreateDriveStorageBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create drive storage bad request response a status code equal to that given
func (o *CreateDriveStorageBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create drive storage bad request response
func (o *CreateDriveStorageBadRequest) Code() int {
	return 400
}

func (o *CreateDriveStorageBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /storage/drive][%d] createDriveStorageBadRequest %s", 400, payload)
}

func (o *CreateDriveStorageBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /storage/drive][%d] createDriveStorageBadRequest %s", 400, payload)
}

func (o *CreateDriveStorageBadRequest) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *CreateDriveStorageBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateDriveStorageInternalServerError creates a CreateDriveStorageInternalServerError with default headers values
func NewCreateDriveStorageInternalServerError() *CreateDriveStorageInternalServerError {
	return &CreateDriveStorageInternalServerError{}
}

/*
CreateDriveStorageInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CreateDriveStorageInternalServerError struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this create drive storage internal server error response has a 2xx status code
func (o *CreateDriveStorageInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create drive storage internal server error response has a 3xx status code
func (o *CreateDriveStorageInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create drive storage internal server error response has a 4xx status code
func (o *CreateDriveStorageInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create drive storage internal server error response has a 5xx status code
func (o *CreateDriveStorageInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create drive storage internal server error response a status code equal to that given
func (o *CreateDriveStorageInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create drive storage internal server error response
func (o *CreateDriveStorageInternalServerError) Code() int {
	return 500
}

func (o *CreateDriveStorageInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /storage/drive][%d] createDriveStorageInternalServerError %s", 500, payload)
}

func (o *CreateDriveStorageInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /storage/drive][%d] createDriveStorageInternalServerError %s", 500, payload)
}

func (o *CreateDriveStorageInternalServerError) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *CreateDriveStorageInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
