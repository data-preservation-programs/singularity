// Code generated by go-swagger; DO NOT EDIT.

package storage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/data-preservation-programs/singularity/client/swagger/models"
)

// CreateS3RackCorpStorageReader is a Reader for the CreateS3RackCorpStorage structure.
type CreateS3RackCorpStorageReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateS3RackCorpStorageReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateS3RackCorpStorageOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateS3RackCorpStorageBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateS3RackCorpStorageInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /storage/s3/rackcorp] CreateS3RackCorpStorage", response, response.Code())
	}
}

// NewCreateS3RackCorpStorageOK creates a CreateS3RackCorpStorageOK with default headers values
func NewCreateS3RackCorpStorageOK() *CreateS3RackCorpStorageOK {
	return &CreateS3RackCorpStorageOK{}
}

/*
CreateS3RackCorpStorageOK describes a response with status code 200, with default header values.

OK
*/
type CreateS3RackCorpStorageOK struct {
	Payload *models.ModelStorage
}

// IsSuccess returns true when this create s3 rack corp storage o k response has a 2xx status code
func (o *CreateS3RackCorpStorageOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create s3 rack corp storage o k response has a 3xx status code
func (o *CreateS3RackCorpStorageOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create s3 rack corp storage o k response has a 4xx status code
func (o *CreateS3RackCorpStorageOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create s3 rack corp storage o k response has a 5xx status code
func (o *CreateS3RackCorpStorageOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create s3 rack corp storage o k response a status code equal to that given
func (o *CreateS3RackCorpStorageOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create s3 rack corp storage o k response
func (o *CreateS3RackCorpStorageOK) Code() int {
	return 200
}

func (o *CreateS3RackCorpStorageOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /storage/s3/rackcorp][%d] createS3RackCorpStorageOK %s", 200, payload)
}

func (o *CreateS3RackCorpStorageOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /storage/s3/rackcorp][%d] createS3RackCorpStorageOK %s", 200, payload)
}

func (o *CreateS3RackCorpStorageOK) GetPayload() *models.ModelStorage {
	return o.Payload
}

func (o *CreateS3RackCorpStorageOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelStorage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateS3RackCorpStorageBadRequest creates a CreateS3RackCorpStorageBadRequest with default headers values
func NewCreateS3RackCorpStorageBadRequest() *CreateS3RackCorpStorageBadRequest {
	return &CreateS3RackCorpStorageBadRequest{}
}

/*
CreateS3RackCorpStorageBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CreateS3RackCorpStorageBadRequest struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this create s3 rack corp storage bad request response has a 2xx status code
func (o *CreateS3RackCorpStorageBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create s3 rack corp storage bad request response has a 3xx status code
func (o *CreateS3RackCorpStorageBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create s3 rack corp storage bad request response has a 4xx status code
func (o *CreateS3RackCorpStorageBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create s3 rack corp storage bad request response has a 5xx status code
func (o *CreateS3RackCorpStorageBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create s3 rack corp storage bad request response a status code equal to that given
func (o *CreateS3RackCorpStorageBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create s3 rack corp storage bad request response
func (o *CreateS3RackCorpStorageBadRequest) Code() int {
	return 400
}

func (o *CreateS3RackCorpStorageBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /storage/s3/rackcorp][%d] createS3RackCorpStorageBadRequest %s", 400, payload)
}

func (o *CreateS3RackCorpStorageBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /storage/s3/rackcorp][%d] createS3RackCorpStorageBadRequest %s", 400, payload)
}

func (o *CreateS3RackCorpStorageBadRequest) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *CreateS3RackCorpStorageBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateS3RackCorpStorageInternalServerError creates a CreateS3RackCorpStorageInternalServerError with default headers values
func NewCreateS3RackCorpStorageInternalServerError() *CreateS3RackCorpStorageInternalServerError {
	return &CreateS3RackCorpStorageInternalServerError{}
}

/*
CreateS3RackCorpStorageInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CreateS3RackCorpStorageInternalServerError struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this create s3 rack corp storage internal server error response has a 2xx status code
func (o *CreateS3RackCorpStorageInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create s3 rack corp storage internal server error response has a 3xx status code
func (o *CreateS3RackCorpStorageInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create s3 rack corp storage internal server error response has a 4xx status code
func (o *CreateS3RackCorpStorageInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create s3 rack corp storage internal server error response has a 5xx status code
func (o *CreateS3RackCorpStorageInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create s3 rack corp storage internal server error response a status code equal to that given
func (o *CreateS3RackCorpStorageInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create s3 rack corp storage internal server error response
func (o *CreateS3RackCorpStorageInternalServerError) Code() int {
	return 500
}

func (o *CreateS3RackCorpStorageInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /storage/s3/rackcorp][%d] createS3RackCorpStorageInternalServerError %s", 500, payload)
}

func (o *CreateS3RackCorpStorageInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /storage/s3/rackcorp][%d] createS3RackCorpStorageInternalServerError %s", 500, payload)
}

func (o *CreateS3RackCorpStorageInternalServerError) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *CreateS3RackCorpStorageInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
