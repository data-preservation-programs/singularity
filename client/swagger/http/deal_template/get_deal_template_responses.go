// Code generated by go-swagger; DO NOT EDIT.

package deal_template

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/data-preservation-programs/singularity/client/swagger/models"
)

// GetDealTemplateReader is a Reader for the GetDealTemplate structure.
type GetDealTemplateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDealTemplateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDealTemplateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDealTemplateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDealTemplateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDealTemplateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /deal-template/{idOrName}] GetDealTemplate", response, response.Code())
	}
}

// NewGetDealTemplateOK creates a GetDealTemplateOK with default headers values
func NewGetDealTemplateOK() *GetDealTemplateOK {
	return &GetDealTemplateOK{}
}

/*
GetDealTemplateOK describes a response with status code 200, with default header values.

OK
*/
type GetDealTemplateOK struct {
	Payload *models.ModelDealTemplate
}

// IsSuccess returns true when this get deal template o k response has a 2xx status code
func (o *GetDealTemplateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get deal template o k response has a 3xx status code
func (o *GetDealTemplateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get deal template o k response has a 4xx status code
func (o *GetDealTemplateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get deal template o k response has a 5xx status code
func (o *GetDealTemplateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get deal template o k response a status code equal to that given
func (o *GetDealTemplateOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get deal template o k response
func (o *GetDealTemplateOK) Code() int {
	return 200
}

func (o *GetDealTemplateOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /deal-template/{idOrName}][%d] getDealTemplateOK %s", 200, payload)
}

func (o *GetDealTemplateOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /deal-template/{idOrName}][%d] getDealTemplateOK %s", 200, payload)
}

func (o *GetDealTemplateOK) GetPayload() *models.ModelDealTemplate {
	return o.Payload
}

func (o *GetDealTemplateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelDealTemplate)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDealTemplateBadRequest creates a GetDealTemplateBadRequest with default headers values
func NewGetDealTemplateBadRequest() *GetDealTemplateBadRequest {
	return &GetDealTemplateBadRequest{}
}

/*
GetDealTemplateBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetDealTemplateBadRequest struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this get deal template bad request response has a 2xx status code
func (o *GetDealTemplateBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get deal template bad request response has a 3xx status code
func (o *GetDealTemplateBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get deal template bad request response has a 4xx status code
func (o *GetDealTemplateBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get deal template bad request response has a 5xx status code
func (o *GetDealTemplateBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get deal template bad request response a status code equal to that given
func (o *GetDealTemplateBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get deal template bad request response
func (o *GetDealTemplateBadRequest) Code() int {
	return 400
}

func (o *GetDealTemplateBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /deal-template/{idOrName}][%d] getDealTemplateBadRequest %s", 400, payload)
}

func (o *GetDealTemplateBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /deal-template/{idOrName}][%d] getDealTemplateBadRequest %s", 400, payload)
}

func (o *GetDealTemplateBadRequest) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *GetDealTemplateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDealTemplateNotFound creates a GetDealTemplateNotFound with default headers values
func NewGetDealTemplateNotFound() *GetDealTemplateNotFound {
	return &GetDealTemplateNotFound{}
}

/*
GetDealTemplateNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetDealTemplateNotFound struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this get deal template not found response has a 2xx status code
func (o *GetDealTemplateNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get deal template not found response has a 3xx status code
func (o *GetDealTemplateNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get deal template not found response has a 4xx status code
func (o *GetDealTemplateNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get deal template not found response has a 5xx status code
func (o *GetDealTemplateNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get deal template not found response a status code equal to that given
func (o *GetDealTemplateNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get deal template not found response
func (o *GetDealTemplateNotFound) Code() int {
	return 404
}

func (o *GetDealTemplateNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /deal-template/{idOrName}][%d] getDealTemplateNotFound %s", 404, payload)
}

func (o *GetDealTemplateNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /deal-template/{idOrName}][%d] getDealTemplateNotFound %s", 404, payload)
}

func (o *GetDealTemplateNotFound) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *GetDealTemplateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDealTemplateInternalServerError creates a GetDealTemplateInternalServerError with default headers values
func NewGetDealTemplateInternalServerError() *GetDealTemplateInternalServerError {
	return &GetDealTemplateInternalServerError{}
}

/*
GetDealTemplateInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetDealTemplateInternalServerError struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this get deal template internal server error response has a 2xx status code
func (o *GetDealTemplateInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get deal template internal server error response has a 3xx status code
func (o *GetDealTemplateInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get deal template internal server error response has a 4xx status code
func (o *GetDealTemplateInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get deal template internal server error response has a 5xx status code
func (o *GetDealTemplateInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get deal template internal server error response a status code equal to that given
func (o *GetDealTemplateInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get deal template internal server error response
func (o *GetDealTemplateInternalServerError) Code() int {
	return 500
}

func (o *GetDealTemplateInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /deal-template/{idOrName}][%d] getDealTemplateInternalServerError %s", 500, payload)
}

func (o *GetDealTemplateInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /deal-template/{idOrName}][%d] getDealTemplateInternalServerError %s", 500, payload)
}

func (o *GetDealTemplateInternalServerError) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *GetDealTemplateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
