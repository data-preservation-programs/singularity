// Code generated by go-swagger; DO NOT EDIT.

package deal_template

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/data-preservation-programs/singularity/client/swagger/models"
)

// UpdateDealTemplateReader is a Reader for the UpdateDealTemplate structure.
type UpdateDealTemplateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateDealTemplateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateDealTemplateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateDealTemplateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateDealTemplateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateDealTemplateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PATCH /deal-template/{idOrName}] UpdateDealTemplate", response, response.Code())
	}
}

// NewUpdateDealTemplateOK creates a UpdateDealTemplateOK with default headers values
func NewUpdateDealTemplateOK() *UpdateDealTemplateOK {
	return &UpdateDealTemplateOK{}
}

/*
UpdateDealTemplateOK describes a response with status code 200, with default header values.

OK
*/
type UpdateDealTemplateOK struct {
	Payload *models.ModelDealTemplate
}

// IsSuccess returns true when this update deal template o k response has a 2xx status code
func (o *UpdateDealTemplateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update deal template o k response has a 3xx status code
func (o *UpdateDealTemplateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update deal template o k response has a 4xx status code
func (o *UpdateDealTemplateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update deal template o k response has a 5xx status code
func (o *UpdateDealTemplateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update deal template o k response a status code equal to that given
func (o *UpdateDealTemplateOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update deal template o k response
func (o *UpdateDealTemplateOK) Code() int {
	return 200
}

func (o *UpdateDealTemplateOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /deal-template/{idOrName}][%d] updateDealTemplateOK %s", 200, payload)
}

func (o *UpdateDealTemplateOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /deal-template/{idOrName}][%d] updateDealTemplateOK %s", 200, payload)
}

func (o *UpdateDealTemplateOK) GetPayload() *models.ModelDealTemplate {
	return o.Payload
}

func (o *UpdateDealTemplateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelDealTemplate)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateDealTemplateBadRequest creates a UpdateDealTemplateBadRequest with default headers values
func NewUpdateDealTemplateBadRequest() *UpdateDealTemplateBadRequest {
	return &UpdateDealTemplateBadRequest{}
}

/*
UpdateDealTemplateBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateDealTemplateBadRequest struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this update deal template bad request response has a 2xx status code
func (o *UpdateDealTemplateBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update deal template bad request response has a 3xx status code
func (o *UpdateDealTemplateBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update deal template bad request response has a 4xx status code
func (o *UpdateDealTemplateBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update deal template bad request response has a 5xx status code
func (o *UpdateDealTemplateBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update deal template bad request response a status code equal to that given
func (o *UpdateDealTemplateBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update deal template bad request response
func (o *UpdateDealTemplateBadRequest) Code() int {
	return 400
}

func (o *UpdateDealTemplateBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /deal-template/{idOrName}][%d] updateDealTemplateBadRequest %s", 400, payload)
}

func (o *UpdateDealTemplateBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /deal-template/{idOrName}][%d] updateDealTemplateBadRequest %s", 400, payload)
}

func (o *UpdateDealTemplateBadRequest) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *UpdateDealTemplateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateDealTemplateNotFound creates a UpdateDealTemplateNotFound with default headers values
func NewUpdateDealTemplateNotFound() *UpdateDealTemplateNotFound {
	return &UpdateDealTemplateNotFound{}
}

/*
UpdateDealTemplateNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateDealTemplateNotFound struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this update deal template not found response has a 2xx status code
func (o *UpdateDealTemplateNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update deal template not found response has a 3xx status code
func (o *UpdateDealTemplateNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update deal template not found response has a 4xx status code
func (o *UpdateDealTemplateNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update deal template not found response has a 5xx status code
func (o *UpdateDealTemplateNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update deal template not found response a status code equal to that given
func (o *UpdateDealTemplateNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update deal template not found response
func (o *UpdateDealTemplateNotFound) Code() int {
	return 404
}

func (o *UpdateDealTemplateNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /deal-template/{idOrName}][%d] updateDealTemplateNotFound %s", 404, payload)
}

func (o *UpdateDealTemplateNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /deal-template/{idOrName}][%d] updateDealTemplateNotFound %s", 404, payload)
}

func (o *UpdateDealTemplateNotFound) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *UpdateDealTemplateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateDealTemplateInternalServerError creates a UpdateDealTemplateInternalServerError with default headers values
func NewUpdateDealTemplateInternalServerError() *UpdateDealTemplateInternalServerError {
	return &UpdateDealTemplateInternalServerError{}
}

/*
UpdateDealTemplateInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type UpdateDealTemplateInternalServerError struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this update deal template internal server error response has a 2xx status code
func (o *UpdateDealTemplateInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update deal template internal server error response has a 3xx status code
func (o *UpdateDealTemplateInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update deal template internal server error response has a 4xx status code
func (o *UpdateDealTemplateInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update deal template internal server error response has a 5xx status code
func (o *UpdateDealTemplateInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update deal template internal server error response a status code equal to that given
func (o *UpdateDealTemplateInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update deal template internal server error response
func (o *UpdateDealTemplateInternalServerError) Code() int {
	return 500
}

func (o *UpdateDealTemplateInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /deal-template/{idOrName}][%d] updateDealTemplateInternalServerError %s", 500, payload)
}

func (o *UpdateDealTemplateInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /deal-template/{idOrName}][%d] updateDealTemplateInternalServerError %s", 500, payload)
}

func (o *UpdateDealTemplateInternalServerError) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *UpdateDealTemplateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
