// Code generated by go-swagger; DO NOT EDIT.

package deal_template

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetDealTemplateParams creates a new GetDealTemplateParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetDealTemplateParams() *GetDealTemplateParams {
	return &GetDealTemplateParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetDealTemplateParamsWithTimeout creates a new GetDealTemplateParams object
// with the ability to set a timeout on a request.
func NewGetDealTemplateParamsWithTimeout(timeout time.Duration) *GetDealTemplateParams {
	return &GetDealTemplateParams{
		timeout: timeout,
	}
}

// NewGetDealTemplateParamsWithContext creates a new GetDealTemplateParams object
// with the ability to set a context for a request.
func NewGetDealTemplateParamsWithContext(ctx context.Context) *GetDealTemplateParams {
	return &GetDealTemplateParams{
		Context: ctx,
	}
}

// NewGetDealTemplateParamsWithHTTPClient creates a new GetDealTemplateParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetDealTemplateParamsWithHTTPClient(client *http.Client) *GetDealTemplateParams {
	return &GetDealTemplateParams{
		HTTPClient: client,
	}
}

/*
GetDealTemplateParams contains all the parameters to send to the API endpoint

	for the get deal template operation.

	Typically these are written to a http.Request.
*/
type GetDealTemplateParams struct {

	/* IDOrName.

	   Deal template ID or name
	*/
	IDOrName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get deal template params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetDealTemplateParams) WithDefaults() *GetDealTemplateParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get deal template params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetDealTemplateParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get deal template params
func (o *GetDealTemplateParams) WithTimeout(timeout time.Duration) *GetDealTemplateParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get deal template params
func (o *GetDealTemplateParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get deal template params
func (o *GetDealTemplateParams) WithContext(ctx context.Context) *GetDealTemplateParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get deal template params
func (o *GetDealTemplateParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get deal template params
func (o *GetDealTemplateParams) WithHTTPClient(client *http.Client) *GetDealTemplateParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get deal template params
func (o *GetDealTemplateParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithIDOrName adds the iDOrName to the get deal template params
func (o *GetDealTemplateParams) WithIDOrName(iDOrName string) *GetDealTemplateParams {
	o.SetIDOrName(iDOrName)
	return o
}

// SetIDOrName adds the idOrName to the get deal template params
func (o *GetDealTemplateParams) SetIDOrName(iDOrName string) {
	o.IDOrName = iDOrName
}

// WriteToRequest writes these params to a swagger request
func (o *GetDealTemplateParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param idOrName
	if err := r.SetPathParam("idOrName", o.IDOrName); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
