// Code generated by go-swagger; DO NOT EDIT.

package state_changes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/data-preservation-programs/singularity/client/swagger/models"
)

// ListStateChangesReader is a Reader for the ListStateChanges structure.
type ListStateChangesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListStateChangesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListStateChangesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListStateChangesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListStateChangesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/state-changes] ListStateChanges", response, response.Code())
	}
}

// NewListStateChangesOK creates a ListStateChangesOK with default headers values
func NewListStateChangesOK() *ListStateChangesOK {
	return &ListStateChangesOK{}
}

/*
ListStateChangesOK describes a response with status code 200, with default header values.

OK
*/
type ListStateChangesOK struct {
	Payload *models.StatechangeStateChangeResponse
}

// IsSuccess returns true when this list state changes o k response has a 2xx status code
func (o *ListStateChangesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list state changes o k response has a 3xx status code
func (o *ListStateChangesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list state changes o k response has a 4xx status code
func (o *ListStateChangesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list state changes o k response has a 5xx status code
func (o *ListStateChangesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list state changes o k response a status code equal to that given
func (o *ListStateChangesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list state changes o k response
func (o *ListStateChangesOK) Code() int {
	return 200
}

func (o *ListStateChangesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/state-changes][%d] listStateChangesOK %s", 200, payload)
}

func (o *ListStateChangesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/state-changes][%d] listStateChangesOK %s", 200, payload)
}

func (o *ListStateChangesOK) GetPayload() *models.StatechangeStateChangeResponse {
	return o.Payload
}

func (o *ListStateChangesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StatechangeStateChangeResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListStateChangesBadRequest creates a ListStateChangesBadRequest with default headers values
func NewListStateChangesBadRequest() *ListStateChangesBadRequest {
	return &ListStateChangesBadRequest{}
}

/*
ListStateChangesBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ListStateChangesBadRequest struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this list state changes bad request response has a 2xx status code
func (o *ListStateChangesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list state changes bad request response has a 3xx status code
func (o *ListStateChangesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list state changes bad request response has a 4xx status code
func (o *ListStateChangesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list state changes bad request response has a 5xx status code
func (o *ListStateChangesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list state changes bad request response a status code equal to that given
func (o *ListStateChangesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list state changes bad request response
func (o *ListStateChangesBadRequest) Code() int {
	return 400
}

func (o *ListStateChangesBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/state-changes][%d] listStateChangesBadRequest %s", 400, payload)
}

func (o *ListStateChangesBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/state-changes][%d] listStateChangesBadRequest %s", 400, payload)
}

func (o *ListStateChangesBadRequest) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *ListStateChangesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListStateChangesInternalServerError creates a ListStateChangesInternalServerError with default headers values
func NewListStateChangesInternalServerError() *ListStateChangesInternalServerError {
	return &ListStateChangesInternalServerError{}
}

/*
ListStateChangesInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ListStateChangesInternalServerError struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this list state changes internal server error response has a 2xx status code
func (o *ListStateChangesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list state changes internal server error response has a 3xx status code
func (o *ListStateChangesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list state changes internal server error response has a 4xx status code
func (o *ListStateChangesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list state changes internal server error response has a 5xx status code
func (o *ListStateChangesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list state changes internal server error response a status code equal to that given
func (o *ListStateChangesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list state changes internal server error response
func (o *ListStateChangesInternalServerError) Code() int {
	return 500
}

func (o *ListStateChangesInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/state-changes][%d] listStateChangesInternalServerError %s", 500, payload)
}

func (o *ListStateChangesInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/state-changes][%d] listStateChangesInternalServerError %s", 500, payload)
}

func (o *ListStateChangesInternalServerError) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *ListStateChangesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
