// Code generated by go-swagger; DO NOT EDIT.

package piece

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/data-preservation-programs/singularity/client/swagger/models"
)

// AddPieceReader is a Reader for the AddPiece structure.
type AddPieceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddPieceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAddPieceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddPieceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAddPieceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /preparation/{id}/piece] AddPiece", response, response.Code())
	}
}

// NewAddPieceOK creates a AddPieceOK with default headers values
func NewAddPieceOK() *AddPieceOK {
	return &AddPieceOK{}
}

/*
AddPieceOK describes a response with status code 200, with default header values.

OK
*/
type AddPieceOK struct {
	Payload *models.ModelCar
}

// IsSuccess returns true when this add piece o k response has a 2xx status code
func (o *AddPieceOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add piece o k response has a 3xx status code
func (o *AddPieceOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add piece o k response has a 4xx status code
func (o *AddPieceOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this add piece o k response has a 5xx status code
func (o *AddPieceOK) IsServerError() bool {
	return false
}

// IsCode returns true when this add piece o k response a status code equal to that given
func (o *AddPieceOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the add piece o k response
func (o *AddPieceOK) Code() int {
	return 200
}

func (o *AddPieceOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /preparation/{id}/piece][%d] addPieceOK %s", 200, payload)
}

func (o *AddPieceOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /preparation/{id}/piece][%d] addPieceOK %s", 200, payload)
}

func (o *AddPieceOK) GetPayload() *models.ModelCar {
	return o.Payload
}

func (o *AddPieceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelCar)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddPieceBadRequest creates a AddPieceBadRequest with default headers values
func NewAddPieceBadRequest() *AddPieceBadRequest {
	return &AddPieceBadRequest{}
}

/*
AddPieceBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type AddPieceBadRequest struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this add piece bad request response has a 2xx status code
func (o *AddPieceBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add piece bad request response has a 3xx status code
func (o *AddPieceBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add piece bad request response has a 4xx status code
func (o *AddPieceBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this add piece bad request response has a 5xx status code
func (o *AddPieceBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this add piece bad request response a status code equal to that given
func (o *AddPieceBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the add piece bad request response
func (o *AddPieceBadRequest) Code() int {
	return 400
}

func (o *AddPieceBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /preparation/{id}/piece][%d] addPieceBadRequest %s", 400, payload)
}

func (o *AddPieceBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /preparation/{id}/piece][%d] addPieceBadRequest %s", 400, payload)
}

func (o *AddPieceBadRequest) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *AddPieceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddPieceInternalServerError creates a AddPieceInternalServerError with default headers values
func NewAddPieceInternalServerError() *AddPieceInternalServerError {
	return &AddPieceInternalServerError{}
}

/*
AddPieceInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type AddPieceInternalServerError struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this add piece internal server error response has a 2xx status code
func (o *AddPieceInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add piece internal server error response has a 3xx status code
func (o *AddPieceInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add piece internal server error response has a 4xx status code
func (o *AddPieceInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this add piece internal server error response has a 5xx status code
func (o *AddPieceInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this add piece internal server error response a status code equal to that given
func (o *AddPieceInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the add piece internal server error response
func (o *AddPieceInternalServerError) Code() int {
	return 500
}

func (o *AddPieceInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /preparation/{id}/piece][%d] addPieceInternalServerError %s", 500, payload)
}

func (o *AddPieceInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /preparation/{id}/piece][%d] addPieceInternalServerError %s", 500, payload)
}

func (o *AddPieceInternalServerError) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *AddPieceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
