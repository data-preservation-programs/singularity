// Code generated by go-swagger; DO NOT EDIT.

package state_changes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/data-preservation-programs/singularity/client/swagger/models"
)

// GetDealStateChangesReader is a Reader for the GetDealStateChanges structure.
type GetDealStateChangesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDealStateChangesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDealStateChangesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDealStateChangesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDealStateChangesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDealStateChangesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/deals/{id}/state-changes] GetDealStateChanges", response, response.Code())
	}
}

// NewGetDealStateChangesOK creates a GetDealStateChangesOK with default headers values
func NewGetDealStateChangesOK() *GetDealStateChangesOK {
	return &GetDealStateChangesOK{}
}

/*
GetDealStateChangesOK describes a response with status code 200, with default header values.

OK
*/
type GetDealStateChangesOK struct {
	Payload []*models.ModelDealStateChange
}

// IsSuccess returns true when this get deal state changes o k response has a 2xx status code
func (o *GetDealStateChangesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get deal state changes o k response has a 3xx status code
func (o *GetDealStateChangesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get deal state changes o k response has a 4xx status code
func (o *GetDealStateChangesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get deal state changes o k response has a 5xx status code
func (o *GetDealStateChangesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get deal state changes o k response a status code equal to that given
func (o *GetDealStateChangesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get deal state changes o k response
func (o *GetDealStateChangesOK) Code() int {
	return 200
}

func (o *GetDealStateChangesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/deals/{id}/state-changes][%d] getDealStateChangesOK %s", 200, payload)
}

func (o *GetDealStateChangesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/deals/{id}/state-changes][%d] getDealStateChangesOK %s", 200, payload)
}

func (o *GetDealStateChangesOK) GetPayload() []*models.ModelDealStateChange {
	return o.Payload
}

func (o *GetDealStateChangesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDealStateChangesBadRequest creates a GetDealStateChangesBadRequest with default headers values
func NewGetDealStateChangesBadRequest() *GetDealStateChangesBadRequest {
	return &GetDealStateChangesBadRequest{}
}

/*
GetDealStateChangesBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetDealStateChangesBadRequest struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this get deal state changes bad request response has a 2xx status code
func (o *GetDealStateChangesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get deal state changes bad request response has a 3xx status code
func (o *GetDealStateChangesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get deal state changes bad request response has a 4xx status code
func (o *GetDealStateChangesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get deal state changes bad request response has a 5xx status code
func (o *GetDealStateChangesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get deal state changes bad request response a status code equal to that given
func (o *GetDealStateChangesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get deal state changes bad request response
func (o *GetDealStateChangesBadRequest) Code() int {
	return 400
}

func (o *GetDealStateChangesBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/deals/{id}/state-changes][%d] getDealStateChangesBadRequest %s", 400, payload)
}

func (o *GetDealStateChangesBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/deals/{id}/state-changes][%d] getDealStateChangesBadRequest %s", 400, payload)
}

func (o *GetDealStateChangesBadRequest) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *GetDealStateChangesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDealStateChangesNotFound creates a GetDealStateChangesNotFound with default headers values
func NewGetDealStateChangesNotFound() *GetDealStateChangesNotFound {
	return &GetDealStateChangesNotFound{}
}

/*
GetDealStateChangesNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetDealStateChangesNotFound struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this get deal state changes not found response has a 2xx status code
func (o *GetDealStateChangesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get deal state changes not found response has a 3xx status code
func (o *GetDealStateChangesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get deal state changes not found response has a 4xx status code
func (o *GetDealStateChangesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get deal state changes not found response has a 5xx status code
func (o *GetDealStateChangesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get deal state changes not found response a status code equal to that given
func (o *GetDealStateChangesNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get deal state changes not found response
func (o *GetDealStateChangesNotFound) Code() int {
	return 404
}

func (o *GetDealStateChangesNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/deals/{id}/state-changes][%d] getDealStateChangesNotFound %s", 404, payload)
}

func (o *GetDealStateChangesNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/deals/{id}/state-changes][%d] getDealStateChangesNotFound %s", 404, payload)
}

func (o *GetDealStateChangesNotFound) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *GetDealStateChangesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDealStateChangesInternalServerError creates a GetDealStateChangesInternalServerError with default headers values
func NewGetDealStateChangesInternalServerError() *GetDealStateChangesInternalServerError {
	return &GetDealStateChangesInternalServerError{}
}

/*
GetDealStateChangesInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetDealStateChangesInternalServerError struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this get deal state changes internal server error response has a 2xx status code
func (o *GetDealStateChangesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get deal state changes internal server error response has a 3xx status code
func (o *GetDealStateChangesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get deal state changes internal server error response has a 4xx status code
func (o *GetDealStateChangesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get deal state changes internal server error response has a 5xx status code
func (o *GetDealStateChangesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get deal state changes internal server error response a status code equal to that given
func (o *GetDealStateChangesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get deal state changes internal server error response
func (o *GetDealStateChangesInternalServerError) Code() int {
	return 500
}

func (o *GetDealStateChangesInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/deals/{id}/state-changes][%d] getDealStateChangesInternalServerError %s", 500, payload)
}

func (o *GetDealStateChangesInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/deals/{id}/state-changes][%d] getDealStateChangesInternalServerError %s", 500, payload)
}

func (o *GetDealStateChangesInternalServerError) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *GetDealStateChangesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
