// Code generated by go-swagger; DO NOT EDIT.

package deal_template

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/data-preservation-programs/singularity/client/swagger/models"
)

// CreateDealTemplateReader is a Reader for the CreateDealTemplate structure.
type CreateDealTemplateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateDealTemplateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateDealTemplateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateDealTemplateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateDealTemplateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /deal-schedule-template] CreateDealTemplate", response, response.Code())
	}
}

// NewCreateDealTemplateOK creates a CreateDealTemplateOK with default headers values
func NewCreateDealTemplateOK() *CreateDealTemplateOK {
	return &CreateDealTemplateOK{}
}

/*
CreateDealTemplateOK describes a response with status code 200, with default header values.

OK
*/
type CreateDealTemplateOK struct {
	Payload *models.ModelDealTemplate
}

// IsSuccess returns true when this create deal template o k response has a 2xx status code
func (o *CreateDealTemplateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create deal template o k response has a 3xx status code
func (o *CreateDealTemplateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create deal template o k response has a 4xx status code
func (o *CreateDealTemplateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create deal template o k response has a 5xx status code
func (o *CreateDealTemplateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create deal template o k response a status code equal to that given
func (o *CreateDealTemplateOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create deal template o k response
func (o *CreateDealTemplateOK) Code() int {
	return 200
}

func (o *CreateDealTemplateOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /deal-schedule-template][%d] createDealTemplateOK %s", 200, payload)
}

func (o *CreateDealTemplateOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /deal-schedule-template][%d] createDealTemplateOK %s", 200, payload)
}

func (o *CreateDealTemplateOK) GetPayload() *models.ModelDealTemplate {
	return o.Payload
}

func (o *CreateDealTemplateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelDealTemplate)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateDealTemplateBadRequest creates a CreateDealTemplateBadRequest with default headers values
func NewCreateDealTemplateBadRequest() *CreateDealTemplateBadRequest {
	return &CreateDealTemplateBadRequest{}
}

/*
CreateDealTemplateBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CreateDealTemplateBadRequest struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this create deal template bad request response has a 2xx status code
func (o *CreateDealTemplateBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create deal template bad request response has a 3xx status code
func (o *CreateDealTemplateBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create deal template bad request response has a 4xx status code
func (o *CreateDealTemplateBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create deal template bad request response has a 5xx status code
func (o *CreateDealTemplateBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create deal template bad request response a status code equal to that given
func (o *CreateDealTemplateBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create deal template bad request response
func (o *CreateDealTemplateBadRequest) Code() int {
	return 400
}

func (o *CreateDealTemplateBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /deal-schedule-template][%d] createDealTemplateBadRequest %s", 400, payload)
}

func (o *CreateDealTemplateBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /deal-schedule-template][%d] createDealTemplateBadRequest %s", 400, payload)
}

func (o *CreateDealTemplateBadRequest) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *CreateDealTemplateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateDealTemplateInternalServerError creates a CreateDealTemplateInternalServerError with default headers values
func NewCreateDealTemplateInternalServerError() *CreateDealTemplateInternalServerError {
	return &CreateDealTemplateInternalServerError{}
}

/*
CreateDealTemplateInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CreateDealTemplateInternalServerError struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this create deal template internal server error response has a 2xx status code
func (o *CreateDealTemplateInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create deal template internal server error response has a 3xx status code
func (o *CreateDealTemplateInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create deal template internal server error response has a 4xx status code
func (o *CreateDealTemplateInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create deal template internal server error response has a 5xx status code
func (o *CreateDealTemplateInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create deal template internal server error response a status code equal to that given
func (o *CreateDealTemplateInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create deal template internal server error response
func (o *CreateDealTemplateInternalServerError) Code() int {
	return 500
}

func (o *CreateDealTemplateInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /deal-schedule-template][%d] createDealTemplateInternalServerError %s", 500, payload)
}

func (o *CreateDealTemplateInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /deal-schedule-template][%d] createDealTemplateInternalServerError %s", 500, payload)
}

func (o *CreateDealTemplateInternalServerError) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *CreateDealTemplateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
