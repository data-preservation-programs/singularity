// Code generated by go-swagger; DO NOT EDIT.

package deal_schedule

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/data-preservation-programs/singularity/client/swagger/models"
)

// ListPreparationSchedulesReader is a Reader for the ListPreparationSchedules structure.
type ListPreparationSchedulesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListPreparationSchedulesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListPreparationSchedulesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListPreparationSchedulesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListPreparationSchedulesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /preparation/{id}/schedules] ListPreparationSchedules", response, response.Code())
	}
}

// NewListPreparationSchedulesOK creates a ListPreparationSchedulesOK with default headers values
func NewListPreparationSchedulesOK() *ListPreparationSchedulesOK {
	return &ListPreparationSchedulesOK{}
}

/*
ListPreparationSchedulesOK describes a response with status code 200, with default header values.

OK
*/
type ListPreparationSchedulesOK struct {
	Payload []*models.ModelSchedule
}

// IsSuccess returns true when this list preparation schedules o k response has a 2xx status code
func (o *ListPreparationSchedulesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list preparation schedules o k response has a 3xx status code
func (o *ListPreparationSchedulesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list preparation schedules o k response has a 4xx status code
func (o *ListPreparationSchedulesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list preparation schedules o k response has a 5xx status code
func (o *ListPreparationSchedulesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list preparation schedules o k response a status code equal to that given
func (o *ListPreparationSchedulesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list preparation schedules o k response
func (o *ListPreparationSchedulesOK) Code() int {
	return 200
}

func (o *ListPreparationSchedulesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /preparation/{id}/schedules][%d] listPreparationSchedulesOK %s", 200, payload)
}

func (o *ListPreparationSchedulesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /preparation/{id}/schedules][%d] listPreparationSchedulesOK %s", 200, payload)
}

func (o *ListPreparationSchedulesOK) GetPayload() []*models.ModelSchedule {
	return o.Payload
}

func (o *ListPreparationSchedulesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListPreparationSchedulesBadRequest creates a ListPreparationSchedulesBadRequest with default headers values
func NewListPreparationSchedulesBadRequest() *ListPreparationSchedulesBadRequest {
	return &ListPreparationSchedulesBadRequest{}
}

/*
ListPreparationSchedulesBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ListPreparationSchedulesBadRequest struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this list preparation schedules bad request response has a 2xx status code
func (o *ListPreparationSchedulesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list preparation schedules bad request response has a 3xx status code
func (o *ListPreparationSchedulesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list preparation schedules bad request response has a 4xx status code
func (o *ListPreparationSchedulesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list preparation schedules bad request response has a 5xx status code
func (o *ListPreparationSchedulesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list preparation schedules bad request response a status code equal to that given
func (o *ListPreparationSchedulesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list preparation schedules bad request response
func (o *ListPreparationSchedulesBadRequest) Code() int {
	return 400
}

func (o *ListPreparationSchedulesBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /preparation/{id}/schedules][%d] listPreparationSchedulesBadRequest %s", 400, payload)
}

func (o *ListPreparationSchedulesBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /preparation/{id}/schedules][%d] listPreparationSchedulesBadRequest %s", 400, payload)
}

func (o *ListPreparationSchedulesBadRequest) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *ListPreparationSchedulesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListPreparationSchedulesInternalServerError creates a ListPreparationSchedulesInternalServerError with default headers values
func NewListPreparationSchedulesInternalServerError() *ListPreparationSchedulesInternalServerError {
	return &ListPreparationSchedulesInternalServerError{}
}

/*
ListPreparationSchedulesInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ListPreparationSchedulesInternalServerError struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this list preparation schedules internal server error response has a 2xx status code
func (o *ListPreparationSchedulesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list preparation schedules internal server error response has a 3xx status code
func (o *ListPreparationSchedulesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list preparation schedules internal server error response has a 4xx status code
func (o *ListPreparationSchedulesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list preparation schedules internal server error response has a 5xx status code
func (o *ListPreparationSchedulesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list preparation schedules internal server error response a status code equal to that given
func (o *ListPreparationSchedulesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list preparation schedules internal server error response
func (o *ListPreparationSchedulesInternalServerError) Code() int {
	return 500
}

func (o *ListPreparationSchedulesInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /preparation/{id}/schedules][%d] listPreparationSchedulesInternalServerError %s", 500, payload)
}

func (o *ListPreparationSchedulesInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /preparation/{id}/schedules][%d] listPreparationSchedulesInternalServerError %s", 500, payload)
}

func (o *ListPreparationSchedulesInternalServerError) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *ListPreparationSchedulesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
