// Code generated by go-swagger; DO NOT EDIT.

package job

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/data-preservation-programs/singularity/client/swagger/models"
)

// StartPackReader is a Reader for the StartPack structure.
type StartPackReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StartPackReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStartPackOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewStartPackBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewStartPackInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /preparation/{id}/source/{name}/start-pack/{job_id}] StartPack", response, response.Code())
	}
}

// NewStartPackOK creates a StartPackOK with default headers values
func NewStartPackOK() *StartPackOK {
	return &StartPackOK{}
}

/*
StartPackOK describes a response with status code 200, with default header values.

OK
*/
type StartPackOK struct {
	Payload []*models.ModelJob
}

// IsSuccess returns true when this start pack o k response has a 2xx status code
func (o *StartPackOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this start pack o k response has a 3xx status code
func (o *StartPackOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this start pack o k response has a 4xx status code
func (o *StartPackOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this start pack o k response has a 5xx status code
func (o *StartPackOK) IsServerError() bool {
	return false
}

// IsCode returns true when this start pack o k response a status code equal to that given
func (o *StartPackOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the start pack o k response
func (o *StartPackOK) Code() int {
	return 200
}

func (o *StartPackOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /preparation/{id}/source/{name}/start-pack/{job_id}][%d] startPackOK %s", 200, payload)
}

func (o *StartPackOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /preparation/{id}/source/{name}/start-pack/{job_id}][%d] startPackOK %s", 200, payload)
}

func (o *StartPackOK) GetPayload() []*models.ModelJob {
	return o.Payload
}

func (o *StartPackOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStartPackBadRequest creates a StartPackBadRequest with default headers values
func NewStartPackBadRequest() *StartPackBadRequest {
	return &StartPackBadRequest{}
}

/*
StartPackBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type StartPackBadRequest struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this start pack bad request response has a 2xx status code
func (o *StartPackBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this start pack bad request response has a 3xx status code
func (o *StartPackBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this start pack bad request response has a 4xx status code
func (o *StartPackBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this start pack bad request response has a 5xx status code
func (o *StartPackBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this start pack bad request response a status code equal to that given
func (o *StartPackBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the start pack bad request response
func (o *StartPackBadRequest) Code() int {
	return 400
}

func (o *StartPackBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /preparation/{id}/source/{name}/start-pack/{job_id}][%d] startPackBadRequest %s", 400, payload)
}

func (o *StartPackBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /preparation/{id}/source/{name}/start-pack/{job_id}][%d] startPackBadRequest %s", 400, payload)
}

func (o *StartPackBadRequest) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *StartPackBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStartPackInternalServerError creates a StartPackInternalServerError with default headers values
func NewStartPackInternalServerError() *StartPackInternalServerError {
	return &StartPackInternalServerError{}
}

/*
StartPackInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type StartPackInternalServerError struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this start pack internal server error response has a 2xx status code
func (o *StartPackInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this start pack internal server error response has a 3xx status code
func (o *StartPackInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this start pack internal server error response has a 4xx status code
func (o *StartPackInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this start pack internal server error response has a 5xx status code
func (o *StartPackInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this start pack internal server error response a status code equal to that given
func (o *StartPackInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the start pack internal server error response
func (o *StartPackInternalServerError) Code() int {
	return 500
}

func (o *StartPackInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /preparation/{id}/source/{name}/start-pack/{job_id}][%d] startPackInternalServerError %s", 500, payload)
}

func (o *StartPackInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /preparation/{id}/source/{name}/start-pack/{job_id}][%d] startPackInternalServerError %s", 500, payload)
}

func (o *StartPackInternalServerError) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *StartPackInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
