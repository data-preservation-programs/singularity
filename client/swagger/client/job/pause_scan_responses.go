// Code generated by go-swagger; DO NOT EDIT.

package job

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/data-preservation-programs/singularity/client/swagger/models"
)

// PauseScanReader is a Reader for the PauseScan structure.
type PauseScanReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PauseScanReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPauseScanOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPauseScanBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPauseScanInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /preparation/{id}/source/{name}/pause-scan] PauseScan", response, response.Code())
	}
}

// NewPauseScanOK creates a PauseScanOK with default headers values
func NewPauseScanOK() *PauseScanOK {
	return &PauseScanOK{}
}

/*
PauseScanOK describes a response with status code 200, with default header values.

OK
*/
type PauseScanOK struct {
	Payload *models.ModelJob
}

// IsSuccess returns true when this pause scan o k response has a 2xx status code
func (o *PauseScanOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this pause scan o k response has a 3xx status code
func (o *PauseScanOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this pause scan o k response has a 4xx status code
func (o *PauseScanOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this pause scan o k response has a 5xx status code
func (o *PauseScanOK) IsServerError() bool {
	return false
}

// IsCode returns true when this pause scan o k response a status code equal to that given
func (o *PauseScanOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the pause scan o k response
func (o *PauseScanOK) Code() int {
	return 200
}

func (o *PauseScanOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /preparation/{id}/source/{name}/pause-scan][%d] pauseScanOK %s", 200, payload)
}

func (o *PauseScanOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /preparation/{id}/source/{name}/pause-scan][%d] pauseScanOK %s", 200, payload)
}

func (o *PauseScanOK) GetPayload() *models.ModelJob {
	return o.Payload
}

func (o *PauseScanOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelJob)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPauseScanBadRequest creates a PauseScanBadRequest with default headers values
func NewPauseScanBadRequest() *PauseScanBadRequest {
	return &PauseScanBadRequest{}
}

/*
PauseScanBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PauseScanBadRequest struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this pause scan bad request response has a 2xx status code
func (o *PauseScanBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this pause scan bad request response has a 3xx status code
func (o *PauseScanBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this pause scan bad request response has a 4xx status code
func (o *PauseScanBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this pause scan bad request response has a 5xx status code
func (o *PauseScanBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this pause scan bad request response a status code equal to that given
func (o *PauseScanBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the pause scan bad request response
func (o *PauseScanBadRequest) Code() int {
	return 400
}

func (o *PauseScanBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /preparation/{id}/source/{name}/pause-scan][%d] pauseScanBadRequest %s", 400, payload)
}

func (o *PauseScanBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /preparation/{id}/source/{name}/pause-scan][%d] pauseScanBadRequest %s", 400, payload)
}

func (o *PauseScanBadRequest) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *PauseScanBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPauseScanInternalServerError creates a PauseScanInternalServerError with default headers values
func NewPauseScanInternalServerError() *PauseScanInternalServerError {
	return &PauseScanInternalServerError{}
}

/*
PauseScanInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PauseScanInternalServerError struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this pause scan internal server error response has a 2xx status code
func (o *PauseScanInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this pause scan internal server error response has a 3xx status code
func (o *PauseScanInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this pause scan internal server error response has a 4xx status code
func (o *PauseScanInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this pause scan internal server error response has a 5xx status code
func (o *PauseScanInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this pause scan internal server error response a status code equal to that given
func (o *PauseScanInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the pause scan internal server error response
func (o *PauseScanInternalServerError) Code() int {
	return 500
}

func (o *PauseScanInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /preparation/{id}/source/{name}/pause-scan][%d] pauseScanInternalServerError %s", 500, payload)
}

func (o *PauseScanInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /preparation/{id}/source/{name}/pause-scan][%d] pauseScanInternalServerError %s", 500, payload)
}

func (o *PauseScanInternalServerError) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *PauseScanInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
