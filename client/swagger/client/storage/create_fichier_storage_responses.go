// Code generated by go-swagger; DO NOT EDIT.

package storage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/data-preservation-programs/singularity/client/swagger/models"
)

// CreateFichierStorageReader is a Reader for the CreateFichierStorage structure.
type CreateFichierStorageReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateFichierStorageReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateFichierStorageOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateFichierStorageBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateFichierStorageInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /storage/fichier] CreateFichierStorage", response, response.Code())
	}
}

// NewCreateFichierStorageOK creates a CreateFichierStorageOK with default headers values
func NewCreateFichierStorageOK() *CreateFichierStorageOK {
	return &CreateFichierStorageOK{}
}

/*
CreateFichierStorageOK describes a response with status code 200, with default header values.

OK
*/
type CreateFichierStorageOK struct {
	Payload *models.ModelStorage
}

// IsSuccess returns true when this create fichier storage o k response has a 2xx status code
func (o *CreateFichierStorageOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create fichier storage o k response has a 3xx status code
func (o *CreateFichierStorageOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create fichier storage o k response has a 4xx status code
func (o *CreateFichierStorageOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create fichier storage o k response has a 5xx status code
func (o *CreateFichierStorageOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create fichier storage o k response a status code equal to that given
func (o *CreateFichierStorageOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create fichier storage o k response
func (o *CreateFichierStorageOK) Code() int {
	return 200
}

func (o *CreateFichierStorageOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /storage/fichier][%d] createFichierStorageOK %s", 200, payload)
}

func (o *CreateFichierStorageOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /storage/fichier][%d] createFichierStorageOK %s", 200, payload)
}

func (o *CreateFichierStorageOK) GetPayload() *models.ModelStorage {
	return o.Payload
}

func (o *CreateFichierStorageOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelStorage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateFichierStorageBadRequest creates a CreateFichierStorageBadRequest with default headers values
func NewCreateFichierStorageBadRequest() *CreateFichierStorageBadRequest {
	return &CreateFichierStorageBadRequest{}
}

/*
CreateFichierStorageBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CreateFichierStorageBadRequest struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this create fichier storage bad request response has a 2xx status code
func (o *CreateFichierStorageBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create fichier storage bad request response has a 3xx status code
func (o *CreateFichierStorageBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create fichier storage bad request response has a 4xx status code
func (o *CreateFichierStorageBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create fichier storage bad request response has a 5xx status code
func (o *CreateFichierStorageBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create fichier storage bad request response a status code equal to that given
func (o *CreateFichierStorageBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create fichier storage bad request response
func (o *CreateFichierStorageBadRequest) Code() int {
	return 400
}

func (o *CreateFichierStorageBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /storage/fichier][%d] createFichierStorageBadRequest %s", 400, payload)
}

func (o *CreateFichierStorageBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /storage/fichier][%d] createFichierStorageBadRequest %s", 400, payload)
}

func (o *CreateFichierStorageBadRequest) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *CreateFichierStorageBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateFichierStorageInternalServerError creates a CreateFichierStorageInternalServerError with default headers values
func NewCreateFichierStorageInternalServerError() *CreateFichierStorageInternalServerError {
	return &CreateFichierStorageInternalServerError{}
}

/*
CreateFichierStorageInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CreateFichierStorageInternalServerError struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this create fichier storage internal server error response has a 2xx status code
func (o *CreateFichierStorageInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create fichier storage internal server error response has a 3xx status code
func (o *CreateFichierStorageInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create fichier storage internal server error response has a 4xx status code
func (o *CreateFichierStorageInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create fichier storage internal server error response has a 5xx status code
func (o *CreateFichierStorageInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create fichier storage internal server error response a status code equal to that given
func (o *CreateFichierStorageInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create fichier storage internal server error response
func (o *CreateFichierStorageInternalServerError) Code() int {
	return 500
}

func (o *CreateFichierStorageInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /storage/fichier][%d] createFichierStorageInternalServerError %s", 500, payload)
}

func (o *CreateFichierStorageInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /storage/fichier][%d] createFichierStorageInternalServerError %s", 500, payload)
}

func (o *CreateFichierStorageInternalServerError) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *CreateFichierStorageInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
