// Code generated by go-swagger; DO NOT EDIT.

package storage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/data-preservation-programs/singularity/client/swagger/models"
)

// CreateUnionStorageReader is a Reader for the CreateUnionStorage structure.
type CreateUnionStorageReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateUnionStorageReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateUnionStorageOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateUnionStorageBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateUnionStorageInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /storage/union] CreateUnionStorage", response, response.Code())
	}
}

// NewCreateUnionStorageOK creates a CreateUnionStorageOK with default headers values
func NewCreateUnionStorageOK() *CreateUnionStorageOK {
	return &CreateUnionStorageOK{}
}

/*
CreateUnionStorageOK describes a response with status code 200, with default header values.

OK
*/
type CreateUnionStorageOK struct {
	Payload *models.ModelStorage
}

// IsSuccess returns true when this create union storage o k response has a 2xx status code
func (o *CreateUnionStorageOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create union storage o k response has a 3xx status code
func (o *CreateUnionStorageOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create union storage o k response has a 4xx status code
func (o *CreateUnionStorageOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create union storage o k response has a 5xx status code
func (o *CreateUnionStorageOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create union storage o k response a status code equal to that given
func (o *CreateUnionStorageOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create union storage o k response
func (o *CreateUnionStorageOK) Code() int {
	return 200
}

func (o *CreateUnionStorageOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /storage/union][%d] createUnionStorageOK %s", 200, payload)
}

func (o *CreateUnionStorageOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /storage/union][%d] createUnionStorageOK %s", 200, payload)
}

func (o *CreateUnionStorageOK) GetPayload() *models.ModelStorage {
	return o.Payload
}

func (o *CreateUnionStorageOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelStorage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateUnionStorageBadRequest creates a CreateUnionStorageBadRequest with default headers values
func NewCreateUnionStorageBadRequest() *CreateUnionStorageBadRequest {
	return &CreateUnionStorageBadRequest{}
}

/*
CreateUnionStorageBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CreateUnionStorageBadRequest struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this create union storage bad request response has a 2xx status code
func (o *CreateUnionStorageBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create union storage bad request response has a 3xx status code
func (o *CreateUnionStorageBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create union storage bad request response has a 4xx status code
func (o *CreateUnionStorageBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create union storage bad request response has a 5xx status code
func (o *CreateUnionStorageBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create union storage bad request response a status code equal to that given
func (o *CreateUnionStorageBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create union storage bad request response
func (o *CreateUnionStorageBadRequest) Code() int {
	return 400
}

func (o *CreateUnionStorageBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /storage/union][%d] createUnionStorageBadRequest %s", 400, payload)
}

func (o *CreateUnionStorageBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /storage/union][%d] createUnionStorageBadRequest %s", 400, payload)
}

func (o *CreateUnionStorageBadRequest) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *CreateUnionStorageBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateUnionStorageInternalServerError creates a CreateUnionStorageInternalServerError with default headers values
func NewCreateUnionStorageInternalServerError() *CreateUnionStorageInternalServerError {
	return &CreateUnionStorageInternalServerError{}
}

/*
CreateUnionStorageInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CreateUnionStorageInternalServerError struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this create union storage internal server error response has a 2xx status code
func (o *CreateUnionStorageInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create union storage internal server error response has a 3xx status code
func (o *CreateUnionStorageInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create union storage internal server error response has a 4xx status code
func (o *CreateUnionStorageInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create union storage internal server error response has a 5xx status code
func (o *CreateUnionStorageInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create union storage internal server error response a status code equal to that given
func (o *CreateUnionStorageInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create union storage internal server error response
func (o *CreateUnionStorageInternalServerError) Code() int {
	return 500
}

func (o *CreateUnionStorageInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /storage/union][%d] createUnionStorageInternalServerError %s", 500, payload)
}

func (o *CreateUnionStorageInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /storage/union][%d] createUnionStorageInternalServerError %s", 500, payload)
}

func (o *CreateUnionStorageInternalServerError) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *CreateUnionStorageInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
