// Code generated by go-swagger; DO NOT EDIT.

package wallet_association

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewAttachWalletParams creates a new AttachWalletParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewAttachWalletParams() *AttachWalletParams {
	return &AttachWalletParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewAttachWalletParamsWithTimeout creates a new AttachWalletParams object
// with the ability to set a timeout on a request.
func NewAttachWalletParamsWithTimeout(timeout time.Duration) *AttachWalletParams {
	return &AttachWalletParams{
		timeout: timeout,
	}
}

// NewAttachWalletParamsWithContext creates a new AttachWalletParams object
// with the ability to set a context for a request.
func NewAttachWalletParamsWithContext(ctx context.Context) *AttachWalletParams {
	return &AttachWalletParams{
		Context: ctx,
	}
}

// NewAttachWalletParamsWithHTTPClient creates a new AttachWalletParams object
// with the ability to set a custom HTTPClient for a request.
func NewAttachWalletParamsWithHTTPClient(client *http.Client) *AttachWalletParams {
	return &AttachWalletParams{
		HTTPClient: client,
	}
}

/*
AttachWalletParams contains all the parameters to send to the API endpoint

	for the attach wallet operation.

	Typically these are written to a http.Request.
*/
type AttachWalletParams struct {

	/* ID.

	   Preparation ID or name
	*/
	ID string

	/* Wallet.

	   Wallet Address
	*/
	Wallet string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the attach wallet params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AttachWalletParams) WithDefaults() *AttachWalletParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the attach wallet params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AttachWalletParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the attach wallet params
func (o *AttachWalletParams) WithTimeout(timeout time.Duration) *AttachWalletParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the attach wallet params
func (o *AttachWalletParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the attach wallet params
func (o *AttachWalletParams) WithContext(ctx context.Context) *AttachWalletParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the attach wallet params
func (o *AttachWalletParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the attach wallet params
func (o *AttachWalletParams) WithHTTPClient(client *http.Client) *AttachWalletParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the attach wallet params
func (o *AttachWalletParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithID adds the id to the attach wallet params
func (o *AttachWalletParams) WithID(id string) *AttachWalletParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the attach wallet params
func (o *AttachWalletParams) SetID(id string) {
	o.ID = id
}

// WithWallet adds the wallet to the attach wallet params
func (o *AttachWalletParams) WithWallet(wallet string) *AttachWalletParams {
	o.SetWallet(wallet)
	return o
}

// SetWallet adds the wallet to the attach wallet params
func (o *AttachWalletParams) SetWallet(wallet string) {
	o.Wallet = wallet
}

// WriteToRequest writes these params to a swagger request
func (o *AttachWalletParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	// path param wallet
	if err := r.SetPathParam("wallet", o.Wallet); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
