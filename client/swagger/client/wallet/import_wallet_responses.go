// Code generated by go-swagger; DO NOT EDIT.

package wallet

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/data-preservation-programs/singularity/client/swagger/models"
)

// ImportWalletReader is a Reader for the ImportWallet structure.
type ImportWalletReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ImportWalletReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewImportWalletOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewImportWalletBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewImportWalletInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /wallet] ImportWallet", response, response.Code())
	}
}

// NewImportWalletOK creates a ImportWalletOK with default headers values
func NewImportWalletOK() *ImportWalletOK {
	return &ImportWalletOK{}
}

/*
ImportWalletOK describes a response with status code 200, with default header values.

OK
*/
type ImportWalletOK struct {
	Payload *models.ModelWallet
}

// IsSuccess returns true when this import wallet o k response has a 2xx status code
func (o *ImportWalletOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this import wallet o k response has a 3xx status code
func (o *ImportWalletOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this import wallet o k response has a 4xx status code
func (o *ImportWalletOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this import wallet o k response has a 5xx status code
func (o *ImportWalletOK) IsServerError() bool {
	return false
}

// IsCode returns true when this import wallet o k response a status code equal to that given
func (o *ImportWalletOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the import wallet o k response
func (o *ImportWalletOK) Code() int {
	return 200
}

func (o *ImportWalletOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /wallet][%d] importWalletOK %s", 200, payload)
}

func (o *ImportWalletOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /wallet][%d] importWalletOK %s", 200, payload)
}

func (o *ImportWalletOK) GetPayload() *models.ModelWallet {
	return o.Payload
}

func (o *ImportWalletOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelWallet)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImportWalletBadRequest creates a ImportWalletBadRequest with default headers values
func NewImportWalletBadRequest() *ImportWalletBadRequest {
	return &ImportWalletBadRequest{}
}

/*
ImportWalletBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ImportWalletBadRequest struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this import wallet bad request response has a 2xx status code
func (o *ImportWalletBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this import wallet bad request response has a 3xx status code
func (o *ImportWalletBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this import wallet bad request response has a 4xx status code
func (o *ImportWalletBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this import wallet bad request response has a 5xx status code
func (o *ImportWalletBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this import wallet bad request response a status code equal to that given
func (o *ImportWalletBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the import wallet bad request response
func (o *ImportWalletBadRequest) Code() int {
	return 400
}

func (o *ImportWalletBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /wallet][%d] importWalletBadRequest %s", 400, payload)
}

func (o *ImportWalletBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /wallet][%d] importWalletBadRequest %s", 400, payload)
}

func (o *ImportWalletBadRequest) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *ImportWalletBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImportWalletInternalServerError creates a ImportWalletInternalServerError with default headers values
func NewImportWalletInternalServerError() *ImportWalletInternalServerError {
	return &ImportWalletInternalServerError{}
}

/*
ImportWalletInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ImportWalletInternalServerError struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this import wallet internal server error response has a 2xx status code
func (o *ImportWalletInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this import wallet internal server error response has a 3xx status code
func (o *ImportWalletInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this import wallet internal server error response has a 4xx status code
func (o *ImportWalletInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this import wallet internal server error response has a 5xx status code
func (o *ImportWalletInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this import wallet internal server error response a status code equal to that given
func (o *ImportWalletInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the import wallet internal server error response
func (o *ImportWalletInternalServerError) Code() int {
	return 500
}

func (o *ImportWalletInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /wallet][%d] importWalletInternalServerError %s", 500, payload)
}

func (o *ImportWalletInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /wallet][%d] importWalletInternalServerError %s", 500, payload)
}

func (o *ImportWalletInternalServerError) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *ImportWalletInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
