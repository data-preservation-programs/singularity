// Code generated by go-swagger; DO NOT EDIT.

package preparation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/data-preservation-programs/singularity/client/swagger/models"
)

// ListPreparationsReader is a Reader for the ListPreparations structure.
type ListPreparationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListPreparationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListPreparationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListPreparationsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListPreparationsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /preparation] ListPreparations", response, response.Code())
	}
}

// NewListPreparationsOK creates a ListPreparationsOK with default headers values
func NewListPreparationsOK() *ListPreparationsOK {
	return &ListPreparationsOK{}
}

/*
ListPreparationsOK describes a response with status code 200, with default header values.

OK
*/
type ListPreparationsOK struct {
	Payload []*models.ModelPreparation
}

// IsSuccess returns true when this list preparations o k response has a 2xx status code
func (o *ListPreparationsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list preparations o k response has a 3xx status code
func (o *ListPreparationsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list preparations o k response has a 4xx status code
func (o *ListPreparationsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list preparations o k response has a 5xx status code
func (o *ListPreparationsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list preparations o k response a status code equal to that given
func (o *ListPreparationsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list preparations o k response
func (o *ListPreparationsOK) Code() int {
	return 200
}

func (o *ListPreparationsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /preparation][%d] listPreparationsOK %s", 200, payload)
}

func (o *ListPreparationsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /preparation][%d] listPreparationsOK %s", 200, payload)
}

func (o *ListPreparationsOK) GetPayload() []*models.ModelPreparation {
	return o.Payload
}

func (o *ListPreparationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListPreparationsBadRequest creates a ListPreparationsBadRequest with default headers values
func NewListPreparationsBadRequest() *ListPreparationsBadRequest {
	return &ListPreparationsBadRequest{}
}

/*
ListPreparationsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ListPreparationsBadRequest struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this list preparations bad request response has a 2xx status code
func (o *ListPreparationsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list preparations bad request response has a 3xx status code
func (o *ListPreparationsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list preparations bad request response has a 4xx status code
func (o *ListPreparationsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list preparations bad request response has a 5xx status code
func (o *ListPreparationsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list preparations bad request response a status code equal to that given
func (o *ListPreparationsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list preparations bad request response
func (o *ListPreparationsBadRequest) Code() int {
	return 400
}

func (o *ListPreparationsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /preparation][%d] listPreparationsBadRequest %s", 400, payload)
}

func (o *ListPreparationsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /preparation][%d] listPreparationsBadRequest %s", 400, payload)
}

func (o *ListPreparationsBadRequest) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *ListPreparationsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListPreparationsInternalServerError creates a ListPreparationsInternalServerError with default headers values
func NewListPreparationsInternalServerError() *ListPreparationsInternalServerError {
	return &ListPreparationsInternalServerError{}
}

/*
ListPreparationsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ListPreparationsInternalServerError struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this list preparations internal server error response has a 2xx status code
func (o *ListPreparationsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list preparations internal server error response has a 3xx status code
func (o *ListPreparationsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list preparations internal server error response has a 4xx status code
func (o *ListPreparationsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list preparations internal server error response has a 5xx status code
func (o *ListPreparationsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list preparations internal server error response a status code equal to that given
func (o *ListPreparationsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list preparations internal server error response
func (o *ListPreparationsInternalServerError) Code() int {
	return 500
}

func (o *ListPreparationsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /preparation][%d] listPreparationsInternalServerError %s", 500, payload)
}

func (o *ListPreparationsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /preparation][%d] listPreparationsInternalServerError %s", 500, payload)
}

func (o *ListPreparationsInternalServerError) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *ListPreparationsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
